;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client, :imports {}, :requires {goog.userAgent.product goog.userAgent.product, guri goog.Uri, async cljs.core.async, goog.Uri goog.Uri, cljs.core.async cljs.core.async, socket figwheel.client.socket, figwheel.client.file-reloading figwheel.client.file-reloading, reloading figwheel.client.file-reloading, string clojure.string, product goog.userAgent.product, figwheel.client.utils figwheel.client.utils, cljs.repl cljs.repl, utils figwheel.client.utils, figwheel.client.heads-up figwheel.client.heads-up, figwheel.client.socket figwheel.client.socket, heads-up figwheel.client.heads-up, clojure.string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, map< cljs.core.async, put! cljs.core.async}, :defs {focus-msgs {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 64, :column 7, :end-line 64, :end-column 17, :arglists (quote ([name-set msg-hist]))}, :name figwheel.client/focus-msgs, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 17, :method-params ([name-set msg-hist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name-set msg-hist]))}, handle-deprecated-jsload-callback {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 308, :column 7, :end-line 308, :end-column 40, :arglists (quote ([config]))}, :name figwheel.client/handle-deprecated-jsload-callback, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 40, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 308, :end-line 308, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config]))}, default-on-compile-fail {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 259, :column 7, :end-line 259, :end-column 30, :arglists (quote ([{:keys [formatted-exception exception-data cause], :as ed}]))}, :name figwheel.client/default-on-compile-fail, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 30, :method-params ([p__27097]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [formatted-exception exception-data cause], :as ed}]))}, reload-file?* {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 67, :column 7, :end-line 67, :end-column 20, :arglists (quote ([msg-name opts]))}, :name figwheel.client/reload-file?*, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 20, :method-params ([msg-name opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-name opts]))}, __figwheel-start-once__ {:name figwheel.client/__figwheel-start-once__, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 350, :column 8, :end-line 350, :end-column 40, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 350, :column 17, :end-line 350, :end-column 40}}, error-msg-format {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 58, :column 7, :end-line 58, :end-column 23, :arglists (quote ([{:keys [message class]}]))}, :name figwheel.client/error-msg-format, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 23, :method-params ([p__26531]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message class]}]))}, compile-fail-warning-plugin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 184, :column 7, :end-line 184, :end-column 34, :arglists (quote ([{:keys [on-compile-warning on-compile-fail]}]))}, :name figwheel.client/compile-fail-warning-plugin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 34, :method-params ([p__26724]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [on-compile-warning on-compile-fail]}]))}, add-message-watch {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 335, :column 7, :end-line 335, :end-column 24, :arglists (quote ([key callback]))}, :name figwheel.client/add-message-watch, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 24, :method-params ([key callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key callback]))}, console-print {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([args]))}, :name figwheel.client/console-print, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 20, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args]))}, add-plugins {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 340, :column 7, :end-line 340, :end-column 18, :arglists (quote ([plugins system-options]))}, :name figwheel.client/add-plugins, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 18, :method-params ([plugins system-options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 340, :end-line 340, :max-fixed-arity 2, :fn-var true, :arglists (quote ([plugins system-options]))}, figwheel-repl-print {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 19, :column 7, :end-line 19, :end-column 26, :arglists (quote ([args]))}, :name figwheel.client/figwheel-repl-print, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 26, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args]))}, file-reloader-plugin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 97, :column 7, :end-line 97, :end-column 27, :arglists (quote ([opts]))}, :name figwheel.client/file-reloader-plugin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 27, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, get-ua-product {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 131, :column 7, :end-line 131, :end-column 21, :arglists (quote ([]))}, :name figwheel.client/get-ua-product, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, heads-up-plugin-msg-handler {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 192, :column 7, :end-line 192, :end-column 34, :arglists (quote ([opts msg-hist']))}, :name figwheel.client/heads-up-plugin-msg-handler, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 34, :method-params ([opts msg-hist']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts msg-hist']))}, watch-and-reload-with-opts {:name figwheel.client/watch-and-reload-with-opts, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 368, :column 1, :end-line 368, :end-column 32, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 368, :column 6, :end-line 368, :end-column 32}}, repl-print-fn {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 43, :column 7, :end-line 43, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name figwheel.client/repl-print-fn, :variadic true, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, compile-fail-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 88, :column 7, :end-line 88, :end-column 26, :arglists (quote ([msg-names]))}, :name figwheel.client/compile-fail-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 26, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names]))}, format-messages {:name figwheel.client/format-messages, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 60, :column 1, :end-line 60, :end-column 21, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 60, :column 6, :end-line 60, :end-column 21}}, css-reloader-plugin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 179, :column 7, :end-line 179, :end-column 26, :arglists (quote ([opts]))}, :name figwheel.client/css-reloader-plugin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 26, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, ensure-cljs-user {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 162, :column 7, :end-line 162, :end-column 23, :arglists (quote ([])), :doc "The REPL can disconnect and reconnect lets ensure cljs.user exists at least."}, :name figwheel.client/ensure-cljs-user, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "The REPL can disconnect and reconnect lets ensure cljs.user exists at least."}, watch-and-reload {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 369, :column 7, :end-line 369, :end-column 23, :arglists (quote ([& {:keys [], :as opts}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [], :as opts})], :arglists ([& {:keys [], :as opts}]), :arglists-meta (nil)}}, :name figwheel.client/watch-and-reload, :variadic true, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [], :as opts})], :arglists ([& {:keys [], :as opts}]), :arglists-meta (nil)}, :method-params [({:keys [], :as opts})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [], :as opts}])}, start {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 347, :column 7, :end-line 347, :end-column 12, :arglists (quote ([opts] [])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([opts] []), :arglists ([opts] []), :arglists-meta (nil nil)}}, :name figwheel.client/start, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([opts] []), :arglists ([opts] []), :arglists-meta (nil nil)}, :method-params ([opts] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 1, :fn-var true, :arglists ([opts] [])}, repl-plugin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 169, :column 7, :end-line 169, :end-column 18, :arglists (quote ([{:keys [build-id], :as opts}]))}, :name figwheel.client/repl-plugin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 18, :method-params ([p__26703]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [build-id], :as opts}]))}, eval-javascript** {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 140, :column 9, :end-line 140, :end-column 26, :arglists (quote ([code opts result-handler]))}, :name figwheel.client/eval-javascript**, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 26, :method-params ([code opts result-handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 140, :end-line 140, :max-fixed-arity 3, :fn-var true, :arglists (quote ([code opts result-handler]))}, heads-up-plugin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 226, :column 7, :end-line 226, :end-column 22, :arglists (quote ([opts]))}, :name figwheel.client/heads-up-plugin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 22, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, css-loaded-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 94, :column 7, :end-line 94, :end-column 24, :arglists (quote ([msg-names]))}, :name figwheel.client/css-loaded-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 24, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names]))}, heads-up-config-options** {:name figwheel.client/heads-up-config-options**, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 228, :column 5, :end-line 228, :end-column 35, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 228, :column 10, :end-line 228, :end-column 35}}, block-reload-file-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 75, :column 7, :end-line 75, :end-column 31, :arglists (quote ([msg-names opts]))}, :name figwheel.client/block-reload-file-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 31, :method-params ([msg-names opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-names opts]))}, rewarning-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 85, :column 7, :end-line 85, :end-column 23, :arglists (quote ([msg-names]))}, :name figwheel.client/rewarning-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 23, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names]))}, toggle-autoload {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 33, :column 16, :end-line 33, :end-column 31, :export true, :arglists (quote ([]))}, :name figwheel.client/toggle-autoload, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 31, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-essential-messages {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 53, :column 7, :end-line 53, :end-column 29, :arglists (quote ([ed]))}, :name figwheel.client/get-essential-messages, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 29, :method-params ([ed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ed]))}, default-on-jsload {:name figwheel.client/default-on-jsload, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 257, :column 1, :end-line 257, :end-column 23, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 257, :column 6, :end-line 257, :end-column 23}}, base-plugins {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 315, :column 7, :end-line 315, :end-column 19, :arglists (quote ([system-options]))}, :name figwheel.client/base-plugins, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 19, :method-params ([system-options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 1, :fn-var true, :arglists (quote ([system-options]))}, default-on-cssload {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 275, :column 7, :end-line 275, :end-column 25, :arglists (quote ([files]))}, :name figwheel.client/default-on-cssload, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 25, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files]))}, enforce-project-plugin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 236, :column 7, :end-line 236, :end-column 29, :arglists (quote ([opts]))}, :name figwheel.client/enforce-project-plugin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 29, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, warning-append-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 79, :column 7, :end-line 79, :end-column 28, :arglists (quote ([msg-names]))}, :name figwheel.client/warning-append-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 28, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names]))}, config-defaults {:name figwheel.client/config-defaults, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 280, :column 1, :end-line 280, :end-column 25, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 280, :column 10, :end-line 280, :end-column 25}}, compile-refail-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 91, :column 7, :end-line 91, :end-column 28, :arglists (quote ([msg-names]))}, :name figwheel.client/compile-refail-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 28, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names]))}, autoload? {:name figwheel.client/autoload?, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 25, :column 1, :end-line 25, :end-column 15, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 25, :column 6, :end-line 25, :end-column 15}}, reload-file-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 71, :column 7, :end-line 71, :end-column 25, :arglists (quote ([msg-names opts]))}, :name figwheel.client/reload-file-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 25, :method-params ([msg-names opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-names opts]))}, default-on-compile-warning {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 267, :column 7, :end-line 267, :end-column 33, :arglists (quote ([{:keys [message], :as w}]))}, :name figwheel.client/default-on-compile-warning, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 33, :method-params ([p__27110]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message], :as w}]))}, warning-state? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 82, :column 7, :end-line 82, :end-column 21, :arglists (quote ([msg-names]))}, :name figwheel.client/warning-state?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 21, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names]))}, default-before-load {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 271, :column 7, :end-line 271, :end-column 26, :arglists (quote ([files]))}, :name figwheel.client/default-before-load, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 26, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files]))}, enable-repl-print! {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 49, :column 7, :end-line 49, :end-column 25, :arglists (quote ([]))}, :name figwheel.client/enable-repl-print!, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, truncate-stack-trace {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :line 127, :column 7, :end-line 127, :end-column 27, :arglists (quote ([stack-str]))}, :name figwheel.client/truncate-stack-trace, :variadic false, :file "file:/C:/Users/MC/.m2/repository/figwheel/figwheel/0.5.0-2/figwheel-0.5.0-2.jar!/figwheel/client.cljs", :end-column 27, :method-params ([stack-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stack-str]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs.repl cljs.repl}, :cljs.analyzer/constants {:seen #{:figwheel-event :ua-product :file-reloader-plugin :cause :safari :on-compile-warning :else :on-jsload :compile-failed :comp-fail-warning-plugin :content :css-reloader-plugin :warn :value :callback-name :reload-dependents :file :on-compile-fail :recur :compile-warning :debug :heads-up-display-plugin :files-changed :repl-plugin :heads-up-display :merge-plugins :jsload-callback :column :firefox :build-id :css-files-changed :success :line :chrome :enforce-project-plugin :status :ie :base-path :class :plugins :info :code :files :websocket-url :stacktrace :before-jsload :exception :msg-name :load-warninged-code :repl-eval :exception-data :eval-fn :project-id :retry-count :autoload :formatted-exception :on-cssload :message}, :order [:figwheel-event :callback-name :content :info :message :class :cause :msg-name :load-warninged-code :compile-warning :files-changed :compile-failed :css-files-changed :recur :files :file :warn :else :chrome :safari :firefox :ie :status :value :ua-product :stacktrace :base-path :exception :success :build-id :repl-eval :code :on-compile-warning :on-compile-fail :autoload :exception-data :project-id :heads-up-display :formatted-exception :debug :line :column :on-jsload :reload-dependents :websocket-url :before-jsload :eval-fn :retry-count :on-cssload :jsload-callback :enforce-project-plugin :file-reloader-plugin :comp-fail-warning-plugin :css-reloader-plugin :repl-plugin :heads-up-display-plugin :plugins :merge-plugins]}, :doc nil}