;; Analyzed by ClojureScript 1.7.170
{:use-macros {with-error-view natal-shell.core}, :excludes #{}, :name syng-im.components.chat.suggestions, :imports nil, :requires {log syng-im.utils.logging, syng-im.utils.logging syng-im.utils.logging, reagent.core reagent.core, r reagent.core, syng-im.components.styles syng-im.components.styles, syng-im.utils.utils syng-im.utils.utils, cstr clojure.string, syng-im.components.react syng-im.components.react, clojure.string clojure.string, re-frame.core re-frame.core, syng-im.utils.listview syng-im.utils.listview}, :uses {subscribe re-frame.core, log syng-im.utils.utils, http-post syng-im.utils.utils, view syng-im.components.react, text syng-im.components.react, to-datasource syng-im.utils.listview, dispatch-sync re-frame.core, color-white syng-im.components.styles, touchable-highlight syng-im.components.react, list-item syng-im.components.react, font syng-im.components.styles, dispatch re-frame.core, toast syng-im.utils.utils, list-view syng-im.components.react, image syng-im.components.react}, :defs {set-command-input {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :line 19, :column 7, :end-line 19, :end-column 24, :arglists (quote ([command]))}, :name syng-im.components.chat.suggestions/set-command-input, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :end-column 24, :method-params ([command]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([command]))}, suggestion-list-item {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :line 22, :column 7, :end-line 22, :end-column 27, :arglists (quote ([suggestion]))}, :name syng-im.components.chat.suggestions/suggestion-list-item, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :end-column 27, :method-params ([suggestion]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([suggestion]))}, render-row {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :line 53, :column 7, :end-line 53, :end-column 17, :arglists (quote ([row section-id row-id]))}, :name syng-im.components.chat.suggestions/render-row, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :end-column 17, :method-params ([row section-id row-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 3, :fn-var true, :arglists (quote ([row section-id row-id]))}, suggestions-view {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :line 56, :column 7, :end-line 56, :end-column 23, :arglists (quote ([]))}, :name syng-im.components.chat.suggestions/suggestions-view, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\components\\chat\\suggestions.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {natal-shell.core natal-shell.core}, :cljs.analyzer/constants {:seen #{:description :transparent :color :onPress :borderRadius :top :command :flex :underlay-color :marginTop :flexDirection :style :fontFamily :dataSource :get-suggestions :set-chat-command :position :lineHeight :renderRow :fontSize :marginHorizontal :backgroundColor :marginVertical :keywordize-keys :height :left :text}, :order [:set-chat-command :onPress :underlay-color :command :transparent :style :flexDirection :marginVertical :marginHorizontal :height :backgroundColor :position :top :left :borderRadius :color :marginTop :fontSize :fontFamily :text :flex :lineHeight :description :keywordize-keys :get-suggestions :dataSource :renderRow]}, :doc nil}