;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.handlers.suggestions, :imports nil, :requires {syng-im.models.chat syng-im.models.chat, log syng-im.utils.logging, syng-im.utils.logging syng-im.utils.logging, syng-im.utils.utils syng-im.utils.utils, db syng-im.db, syng-im.db syng-im.db, s clojure.string, syng-im.models.commands syng-im.models.commands, clojure.string clojure.string, re-frame.core re-frame.core}, :uses {current-chat-id syng-im.models.chat, on-error syng-im.utils.utils, http-get syng-im.utils.utils, subscribe re-frame.core, log syng-im.utils.utils, clear-staged-commands syng-im.models.commands, get-commands syng-im.models.commands, dispatch-sync re-frame.core, get-chat-command-request syng-im.models.commands, get-chat-command-to-msg-id syng-im.models.commands, dispatch re-frame.core, commands syng-im.models.commands, suggestions syng-im.models.commands}, :defs {suggestion? {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([text]))}, :name syng-im.handlers.suggestions/suggestion?, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 18, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, get-suggestions {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 18, :column 7, :end-line 18, :end-column 22, :arglists (quote ([db text]))}, :name syng-im.handlers.suggestions/get-suggestions, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 22, :method-params ([db text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db text]))}, get-command {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 24, :column 7, :end-line 24, :end-column 18, :arglists (quote ([db text]))}, :name syng-im.handlers.suggestions/get-command, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 18, :method-params ([db text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db text]))}, handle-command {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 29, :column 7, :end-line 29, :end-column 21, :arglists (quote ([db command-key content]))}, :name syng-im.handlers.suggestions/handle-command, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 21, :method-params ([db command-key content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db command-key content]))}, get-command-handler {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 35, :column 7, :end-line 35, :end-column 26, :arglists (quote ([db command-key content]))}, :name syng-im.handlers.suggestions/get-command-handler, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 26, :method-params ([db command-key content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db command-key content]))}, apply-staged-commands {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 41, :column 7, :end-line 41, :end-column 28, :arglists (quote ([db]))}, :name syng-im.handlers.suggestions/apply-staged-commands, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 28, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, execute-commands-js {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 49, :column 7, :end-line 49, :end-column 26, :arglists (quote ([body]))}, :name syng-im.handlers.suggestions/execute-commands-js, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 26, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body]))}, load-commands {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 55, :column 7, :end-line 55, :end-column 20, :arglists (quote ([]))}, :name syng-im.handlers.suggestions/load-commands, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, check-suggestion {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :line 58, :column 7, :end-line 58, :end-column 23, :arglists (quote ([db message]))}, :name syng-im.handlers.suggestions/check-suggestion, :variadic false, :file "D:\\React\\chatapp\\status-react\\src\\syng_im\\handlers\\suggestions.cljs", :end-column 23, :method-params ([db message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db message]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:command :handler :keywordize-keys :set-commands :text}, :order [:text :handler :set-commands :command :keywordize-keys]}, :doc nil}