;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.protocol.group-chat, :imports nil, :requires {state syng-im.protocol.state.state, syng-im.protocol.state.state syng-im.protocol.state.state, syng-im.protocol.state.delivery syng-im.protocol.state.delivery, syng-im.protocol.state.group-chat syng-im.protocol.state.group-chat, syng-im.protocol.web3 syng-im.protocol.web3}, :uses {get-keypair syng-im.protocol.state.group-chat, connection syng-im.protocol.state.state, get-peer-identities syng-im.protocol.state.group-chat, make-msg syng-im.protocol.web3, add-pending-message syng-im.protocol.state.delivery, post-msg syng-im.protocol.web3, storage syng-im.protocol.state.state}, :defs {group-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([group-id public-key payload type]))}, :name syng-im.protocol.group-chat/group-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :end-column 16, :method-params ([group-id public-key payload type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([group-id public-key payload type]))}, send-group-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :line 19, :column 7, :end-line 19, :end-column 21, :arglists (quote ([{:keys [group-id payload type internal?], :or {internal? false}}]))}, :name syng-im.protocol.group-chat/send-group-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :end-column 21, :method-params ([p__24278]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [group-id payload type internal?], :or {internal? false}}]))}, init-group-chat-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :line 28, :column 7, :end-line 28, :end-column 26, :arglists (quote ([to group-topic identities keypair group-name]))}, :name syng-im.protocol.group-chat/init-group-chat-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :end-column 26, :method-params ([to group-topic identities keypair group-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to group-topic identities keypair group-name]))}, group-add-participant-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :line 37, :column 7, :end-line 37, :end-column 32, :arglists (quote ([to group-id identities keypair]))}, :name syng-im.protocol.group-chat/group-add-participant-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :end-column 32, :method-params ([to group-id identities keypair]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([to group-id identities keypair]))}, group-remove-participant-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :line 45, :column 7, :end-line 45, :end-column 35, :arglists (quote ([to group-id keypair identity-to-remove]))}, :name syng-im.protocol.group-chat/group-remove-participant-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :end-column 35, :method-params ([to group-id keypair identity-to-remove]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 4, :fn-var true, :arglists (quote ([to group-id keypair identity-to-remove]))}, removed-from-group-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :line 53, :column 7, :end-line 53, :end-column 29, :arglists (quote ([group-id identity-to-remove]))}, :name syng-im.protocol.group-chat/removed-from-group-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/group_chat.cljs", :end-column 29, :method-params ([group-id identity-to-remove]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([group-id identity-to-remove]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:msg-id :payload :group-id :group-topic :public :msg :type :internal? :topics :group-name :keypair :from :removed-from-group :removed-identity :clear-info :init-group-chat :encrypt? :identities :public-key :group-removed-participant :to}, :order [:from :topics :encrypt? :public-key :payload :clear-info :group-topic :type :group-id :internal? :public :msg-id :msg :identities :to :group-name :keypair :init-group-chat :removed-identity :group-removed-participant :removed-from-group]}, :doc nil}