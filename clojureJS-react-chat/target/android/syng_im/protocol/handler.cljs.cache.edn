;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.protocol.handler, :imports nil, :requires {log syng-im.utils.logging, syng-im.protocol.user-handler syng-im.protocol.user-handler, syng-im.utils.logging syng-im.utils.logging, syng-im.protocol.defaults syng-im.protocol.defaults, syng-im.protocol.web3 syng-im.protocol.web3, state syng-im.protocol.state.state, syng-im.utils.encryption syng-im.utils.encryption, syng-im.protocol.state.group-chat syng-im.protocol.state.group-chat, cljs.reader cljs.reader, syng-im.protocol.state.delivery syng-im.protocol.state.delivery, syng-im.protocol.state.state syng-im.protocol.state.state}, :uses {get-keypair syng-im.protocol.state.group-chat, chat-exists? syng-im.protocol.state.group-chat, get-identities syng-im.protocol.state.group-chat, remove-identity syng-im.protocol.state.group-chat, save-identities syng-im.protocol.state.group-chat, save-keypair syng-im.protocol.state.group-chat, save-group-admin syng-im.protocol.state.group-chat, default-content-type syng-im.protocol.defaults, group-member? syng-im.protocol.state.group-chat, add-identity syng-im.protocol.state.group-chat, make-msg syng-im.protocol.web3, internal? syng-im.protocol.state.delivery, read-string cljs.reader, listen syng-im.protocol.web3, stop-listener syng-im.protocol.web3, remove-group-data syng-im.protocol.state.group-chat, update-pending-message syng-im.protocol.state.delivery, group-admin? syng-im.protocol.state.group-chat, to-ascii syng-im.protocol.web3, invoke-user-handler syng-im.protocol.user-handler, post-msg syng-im.protocol.web3, storage syng-im.protocol.state.state, decrypt syng-im.utils.encryption, pending? syng-im.protocol.state.delivery}, :defs {handle-removed-from-group {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 114, :column 7, :end-line 114, :end-column 32, :arglists (quote ([web3 from {:keys [group-topic msg-id]}]))}, :name syng-im.protocol.handler/handle-removed-from-group, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 32, :method-params ([web3 from p__24251]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 3, :fn-var true, :arglists (quote ([web3 from {:keys [group-topic msg-id]}]))}, handle-incoming-whisper-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 144, :column 7, :end-line 144, :end-column 34, :arglists (quote ([web3 msg]))}, :name syng-im.protocol.handler/handle-incoming-whisper-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 34, :method-params ([web3 msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([web3 msg]))}, handle-user-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 54, :column 7, :end-line 54, :end-column 22, :arglists (quote ([web3 from to {:keys [msg-id], :as payload}]))}, :name syng-im.protocol.handler/handle-user-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 22, :method-params ([web3 from to p__24222]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 4, :fn-var true, :arglists (quote ([web3 from to {:keys [msg-id], :as payload}]))}, handle-group-user-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 81, :column 7, :end-line 81, :end-column 28, :arglists (quote ([web3 from {:keys [msg-id group-topic], :as payload}]))}, :name syng-im.protocol.handler/handle-group-user-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 28, :method-params ([web3 from p__24236]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists (quote ([web3 from {:keys [msg-id group-topic], :as payload}]))}, handle-group-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 136, :column 7, :end-line 136, :end-column 23, :arglists (quote ([web3 msg-type from {:keys [enc-payload group-topic]}]))}, :name syng-im.protocol.handler/handle-group-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 23, :method-params ([web3 msg-type from p__24261]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 4, :fn-var true, :arglists (quote ([web3 msg-type from {:keys [enc-payload group-topic]}]))}, handle-group-removed-participant {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 100, :column 7, :end-line 100, :end-column 39, :arglists (quote ([web3 from {:keys [keypair group-topic msg-id removed-identity]}]))}, :name syng-im.protocol.handler/handle-group-removed-participant, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 39, :method-params ([web3 from p__24246]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 3, :fn-var true, :arglists (quote ([web3 from {:keys [keypair group-topic msg-id removed-identity]}]))}, handle-group-new-participant {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 87, :column 7, :end-line 87, :end-column 35, :arglists (quote ([web3 from {:keys [msg-id identity group-topic]}]))}, :name syng-im.protocol.handler/handle-group-new-participant, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 35, :method-params ([web3 from p__24241]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 3, :fn-var true, :arglists (quote ([web3 from {:keys [msg-id identity group-topic]}]))}, handle-participant-left-group {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 127, :column 7, :end-line 127, :end-column 36, :arglists (quote ([web3 from {:keys [group-topic msg-id]}]))}, :name syng-im.protocol.handler/handle-participant-left-group, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 36, :method-params ([web3 from p__24256]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 3, :fn-var true, :arglists (quote ([web3 from {:keys [group-topic msg-id]}]))}, handle-new-group-chat {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 62, :column 7, :end-line 62, :end-column 28, :arglists (quote ([web3 from {:keys [group-topic keypair identities msg-id]}]))}, :name syng-im.protocol.handler/handle-new-group-chat, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 28, :method-params ([web3 from p__24227]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 3, :fn-var true, :arglists (quote ([web3 from {:keys [group-topic keypair identities msg-id]}]))}, handle-ack {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 28, :column 7, :end-line 28, :end-column 17, :arglists (quote ([from {:keys [ack-msg-id msg-id], :as payload}]))}, :name syng-im.protocol.handler/handle-ack, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 17, :method-params ([from p__24212]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from {:keys [ack-msg-id msg-id], :as payload}]))}, decrypt-group-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 74, :column 7, :end-line 74, :end-column 24, :arglists (quote ([group-topic encrypted-payload]))}, :name syng-im.protocol.handler/decrypt-group-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 24, :method-params ([group-topic encrypted-payload]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([group-topic encrypted-payload]))}, send-ack {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :line 42, :column 7, :end-line 42, :end-column 15, :arglists (quote ([web3 to msg-id] [web3 to msg-id ack-info])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([web3 to msg-id] [web3 to msg-id ack-info]), :arglists ([web3 to msg-id] [web3 to msg-id ack-info]), :arglists-meta (nil nil)}}, :name syng-im.protocol.handler/send-ack, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/handler.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([web3 to msg-id] [web3 to msg-id ack-info]), :arglists ([web3 to msg-id] [web3 to msg-id ack-info]), :arglists-meta (nil nil)}, :method-params ([web3 to msg-id] [web3 to msg-id ack-info]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 4, :fn-var true, :arglists ([web3 to msg-id] [web3 to msg-id ack-info])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:enc-payload :new-msg :group-invite :identity :msg-id :payload :new-group-chat :private :group-id :group-topic :group-new-participant :msg :type :topics :group-chat-invite-acked :keypair :from :participant-left-group :ack :new-group-msg :ack-msg-id :removed-from-group :msg-acked :removed-identity :keywordize-keys :identities :group-removed-participant :to}, :order [:ack-msg-id :msg-id :msg-acked :from :group-invite :group-chat-invite-acked :group-id :to :payload :type :ack :msg :new-msg :group-topic :keypair :identities :topics :new-group-chat :private :new-group-msg :identity :group-new-participant :removed-identity :group-removed-participant :removed-from-group :participant-left-group :enc-payload :keywordize-keys]}, :doc nil}