;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name syng-im.protocol.delivery, :imports nil, :requires {t cljs-time.core, log syng-im.utils.logging, whisper syng-im.protocol.web3, syng-im.protocol.user-handler syng-im.protocol.user-handler, syng-im.utils.logging syng-im.utils.logging, syng-im.protocol.defaults syng-im.protocol.defaults, cljs.core.async cljs.core.async, cljs-time.core cljs-time.core, syng-im.protocol.web3 syng-im.protocol.web3, state syng-im.protocol.state.delivery, s syng-im.protocol.state.state, syng-im.protocol.state.delivery syng-im.protocol.state.delivery, syng-im.protocol.state.state syng-im.protocol.state.state}, :uses {timeout cljs.core.async, <! cljs.core.async, max-retry-send-count syng-im.protocol.defaults, ack-wait-timeout-ms syng-im.protocol.defaults, check-delivery-interval-msg syng-im.protocol.defaults, invoke-user-handler syng-im.protocol.user-handler}, :defs {expired? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/delivery.cljs", :line 14, :column 7, :end-line 14, :end-column 15, :arglists (quote ([timestamp]))}, :name syng-im.protocol.delivery/expired?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/delivery.cljs", :end-column 15, :method-params ([timestamp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([timestamp]))}, delivery-expired-seq {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/delivery.cljs", :line 17, :column 7, :end-line 17, :end-column 27, :arglists (quote ([]))}, :name syng-im.protocol.delivery/delivery-expired-seq, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/delivery.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-delivery-loop {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/delivery.cljs", :line 27, :column 7, :end-line 27, :end-column 26, :arglists (quote ([]))}, :name syng-im.protocol.delivery/start-delivery-loop, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/delivery.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:msg-id :else :recur :msg :delivery-failed :timestamp :retry-count}, :order [:timestamp :recur :msg-id :delivery-failed :retry-count :msg :else]}, :doc nil}