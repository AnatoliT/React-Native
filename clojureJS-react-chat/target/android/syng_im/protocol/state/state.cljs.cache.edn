;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.protocol.state.state, :imports nil, :requires {t cljs-time.core, cljs-time.core cljs-time.core}, :uses nil, :defs {connection {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([]))}, :name syng-im.protocol.state.state/connection, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 27, :column 7, :end-line 27, :end-column 19, :arglists (quote ([identity]))}, :name syng-im.protocol.state.state/set-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 19, :method-params ([identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([identity]))}, external-handler {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 39, :column 7, :end-line 39, :end-column 23, :arglists (quote ([]))}, :name syng-im.protocol.state.state/external-handler, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-storage {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([storage]))}, :name syng-im.protocol.state.state/set-storage, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 18, :method-params ([storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([storage]))}, set-handler {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 24, :column 7, :end-line 24, :end-column 18, :arglists (quote ([handler]))}, :name syng-im.protocol.state.state/set-handler, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 18, :method-params ([handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([handler]))}, set-connection {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 30, :column 7, :end-line 30, :end-column 21, :arglists (quote ([connection]))}, :name syng-im.protocol.state.state/set-connection, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 21, :method-params ([connection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([connection]))}, add-filter {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 12, :column 7, :end-line 12, :end-column 17, :arglists (quote ([topics filter]))}, :name syng-im.protocol.state.state/add-filter, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 17, :method-params ([topics filter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([topics filter]))}, my-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([]))}, :name syng-im.protocol.state.state/my-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name syng-im.protocol.state.state/state, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 4, :column 1, :end-line 4, :end-column 11, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 4, :column 6, :end-line 4, :end-column 11}}, storage {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 42, :column 7, :end-line 42, :end-column 14, :arglists (quote ([]))}, :name syng-im.protocol.state.state/storage, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-filter {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([topics]))}, :name syng-im.protocol.state.state/get-filter, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 17, :method-params ([topics]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topics]))}, remove-filter {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :line 18, :column 7, :end-line 18, :end-column 20, :arglists (quote ([topics]))}, :name syng-im.protocol.state.state/remove-filter, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/state.cljs", :end-column 20, :method-params ([topics]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topics]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:identity :external-handler :filters :pending-messages :storage :delivery-queue :connection}, :order [:pending-messages :filters :delivery-queue :external-handler :identity :connection :storage]}, :doc nil}