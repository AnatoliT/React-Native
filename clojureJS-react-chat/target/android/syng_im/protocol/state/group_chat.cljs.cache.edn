;; Analyzed by ClojureScript 1.7.170
{:name syng-im.protocol.state.group-chat, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {s syng-im.protocol.state.storage, syng-im.protocol.state.storage syng-im.protocol.state.storage, state syng-im.protocol.state.state, syng-im.protocol.state.state syng-im.protocol.state.state}, :imports nil, :defs {get-keypair {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([storage topic]))}, :name syng-im.protocol.state.group-chat/get-keypair, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 18, :method-params ([storage topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage topic]))}, chat-exists? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 46, :column 7, :end-line 46, :end-column 19, :arglists (quote ([storage topic]))}, :name syng-im.protocol.state.group-chat/chat-exists?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 19, :method-params ([storage topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage topic]))}, get-identities {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([storage topic]))}, :name syng-im.protocol.state.group-chat/get-identities, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 21, :method-params ([storage topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage topic]))}, remove-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 32, :column 7, :end-line 32, :end-column 22, :arglists (quote ([storage topic identity]))}, :name syng-im.protocol.state.group-chat/remove-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 22, :method-params ([storage topic identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic identity]))}, save-identities {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 18, :column 7, :end-line 18, :end-column 22, :arglists (quote ([storage topic identities]))}, :name syng-im.protocol.state.group-chat/save-identities, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 22, :method-params ([storage topic identities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic identities]))}, get-peer-identities {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 42, :column 7, :end-line 42, :end-column 26, :arglists (quote ([storage topic]))}, :name syng-im.protocol.state.group-chat/get-peer-identities, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 26, :method-params ([storage topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage topic]))}, topic-identities-key {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 8, :column 7, :end-line 8, :end-column 27, :arglists (quote ([topic]))}, :name syng-im.protocol.state.group-chat/topic-identities-key, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 27, :method-params ([topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topic]))}, save-keypair {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([storage topic keypair]))}, :name syng-im.protocol.state.group-chat/save-keypair, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 19, :method-params ([storage topic keypair]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic keypair]))}, save-group-admin {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 60, :column 7, :end-line 60, :end-column 23, :arglists (quote ([storage topic identity]))}, :name syng-im.protocol.state.group-chat/save-group-admin, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 23, :method-params ([storage topic identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic identity]))}, topic-admin-ident-key {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 11, :column 7, :end-line 11, :end-column 28, :arglists (quote ([topic]))}, :name syng-im.protocol.state.group-chat/topic-admin-ident-key, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 28, :method-params ([topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topic]))}, group-member? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 38, :column 7, :end-line 38, :end-column 20, :arglists (quote ([storage topic identity]))}, :name syng-im.protocol.state.group-chat/group-member?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 20, :method-params ([storage topic identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic identity]))}, add-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 26, :column 7, :end-line 26, :end-column 19, :arglists (quote ([storage topic identity]))}, :name syng-im.protocol.state.group-chat/add-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 19, :method-params ([storage topic identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic identity]))}, topic-keypair-key {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 5, :column 7, :end-line 5, :end-column 24, :arglists (quote ([topic]))}, :name syng-im.protocol.state.group-chat/topic-keypair-key, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 24, :method-params ([topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topic]))}, remove-group-data {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 54, :column 7, :end-line 54, :end-column 24, :arglists (quote ([storage topic]))}, :name syng-im.protocol.state.group-chat/remove-group-data, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 24, :method-params ([storage topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([storage topic]))}, group-admin? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :line 64, :column 7, :end-line 64, :end-column 19, :arglists (quote ([storage topic identity]))}, :name syng-im.protocol.state.group-chat/group-admin?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/group_chat.cljs", :end-column 19, :method-params ([storage topic identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 3, :fn-var true, :arglists (quote ([storage topic identity]))}}}