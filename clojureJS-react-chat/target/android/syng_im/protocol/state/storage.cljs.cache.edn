;; Analyzed by ClojureScript 1.7.170
{:name syng-im.protocol.state.storage, :doc nil, :excludes #{get}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {Storage {:meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :line 4, :column 14, :end-line 4, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {put [[this key value]], get [[this key]], contains-key? [[this key]], delete [[this key]]}}}, :protocol-symbol true, :name syng-im.protocol.state.storage/Storage, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :end-column 21, :column 1, :line 4, :protocol-info {:methods {put [[this key value]], get [[this key]], contains-key? [[this key]], delete [[this key]]}}, :info nil, :end-line 4, :impls #{}, :doc nil, :jsdoc ("@interface")}, put {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :line 5, :column 4, :end-line 5, :end-column 7, :protocol syng-im.protocol.state.storage/Storage, :doc nil, :arglists (quote ([this key value]))}, :protocol syng-im.protocol.state.storage/Storage, :name syng-im.protocol.state.storage/put, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :end-column 7, :method-params ([this key value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this key value])), :doc nil}, get {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :line 6, :column 4, :end-line 6, :end-column 7, :protocol syng-im.protocol.state.storage/Storage, :doc nil, :arglists (quote ([this key]))}, :protocol syng-im.protocol.state.storage/Storage, :name syng-im.protocol.state.storage/get, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :end-column 7, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc nil}, contains-key? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :line 7, :column 4, :end-line 7, :end-column 17, :protocol syng-im.protocol.state.storage/Storage, :doc nil, :arglists (quote ([this key]))}, :protocol syng-im.protocol.state.storage/Storage, :name syng-im.protocol.state.storage/contains-key?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :end-column 17, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc nil}, delete {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :line 8, :column 4, :end-line 8, :end-column 10, :protocol syng-im.protocol.state.storage/Storage, :doc nil, :arglists (quote ([this key]))}, :protocol syng-im.protocol.state.storage/Storage, :name syng-im.protocol.state.storage/delete, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/storage.cljs", :end-column 10, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc nil}}}