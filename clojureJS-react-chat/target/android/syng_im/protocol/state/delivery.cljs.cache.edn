;; Analyzed by ClojureScript 1.7.170
{:use-macros {condas-> syng-im.utils.lang-macros}, :excludes #{}, :name syng-im.protocol.state.delivery, :imports nil, :requires {t cljs-time.core, cljs-time.core cljs-time.core, log syng-im.utils.logging, syng-im.utils.logging syng-im.utils.logging, syng-im.protocol.state.state syng-im.protocol.state.state}, :uses {state syng-im.protocol.state.state}, :defs {inc-retry-count {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 7, :column 7, :end-line 7, :end-column 22, :arglists (quote ([msg-id]))}, :name syng-im.protocol.state.delivery/inc-retry-count, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 22, :method-params ([msg-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-id]))}, push-msg-to-delivery-queue {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 16, :column 7, :end-line 16, :end-column 33, :arglists (quote ([state msg-id]))}, :name syng-im.protocol.state.delivery/push-msg-to-delivery-queue, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 33, :method-params ([state msg-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state msg-id]))}, pop-delivery-queue {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 32, :column 7, :end-line 32, :end-column 25, :arglists (quote ([]))}, :name syng-im.protocol.state.delivery/pop-delivery-queue, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, push-delivery-queue {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 35, :column 7, :end-line 35, :end-column 26, :arglists (quote ([msg-id]))}, :name syng-im.protocol.state.delivery/push-delivery-queue, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 26, :method-params ([msg-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-id]))}, internal? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([msg-id]))}, :name syng-im.protocol.state.delivery/internal?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 16, :method-params ([msg-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-id]))}, add-pending-message {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 20, :column 7, :end-line 20, :end-column 26, :arglists (quote ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg]), :arglists ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg]), :arglists-meta (nil nil)}}, :name syng-im.protocol.state.delivery/add-pending-message, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 26, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg]), :arglists ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg]), :arglists-meta (nil nil)}, :method-params ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists ([msg-id msg {:keys [identities internal?], :as opts}] [msg-id msg])}, update-pending-message {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 41, :column 7, :end-line 41, :end-column 29, :arglists (quote ([msg-id from]))}, :name syng-im.protocol.state.delivery/update-pending-message, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 29, :method-params ([msg-id from]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-id from]))}, remove-pending-message {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 55, :column 7, :end-line 55, :end-column 29, :arglists (quote ([msg-id]))}, :name syng-im.protocol.state.delivery/remove-pending-message, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 29, :method-params ([msg-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-id]))}, delivery-queue {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 58, :column 7, :end-line 58, :end-column 21, :arglists (quote ([]))}, :name syng-im.protocol.state.delivery/delivery-queue, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pending? {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :line 13, :column 7, :end-line 13, :end-column 15, :arglists (quote ([msg-id]))}, :name syng-im.protocol.state.delivery/pending?, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/state/delivery.cljs", :end-column 15, :method-params ([msg-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-id]))}}, :require-macros {syng-im.utils.lang-macros syng-im.utils.lang-macros}, :cljs.analyzer/constants {:seen #{:msg-id :msg :internal? :pending-messages :delivery-queue :timestamp :retry-count :identities}, :order [:pending-messages :retry-count :delivery-queue :timestamp :msg-id :identities :internal? :msg]}, :doc nil}