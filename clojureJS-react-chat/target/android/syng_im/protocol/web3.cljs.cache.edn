;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name syng-im.protocol.web3, :imports nil, :requires {log syng-im.utils.logging, syng-im.protocol.user-handler syng-im.protocol.user-handler, syng-im.utils.logging syng-im.utils.logging, syng-im.utils.random syng-im.utils.random, cljs.core.async cljs.core.async, cljsjs.web3 cljsjs.web3, state syng-im.protocol.state.state, syng-im.utils.encryption syng-im.utils.encryption, syng-im.protocol.state.state syng-im.protocol.state.state, random syng-im.utils.random}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, encrypt syng-im.utils.encryption, invoke-user-handler syng-im.protocol.user-handler, put! cljs.core.async}, :defs {make-callback {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 31, :column 7, :end-line 31, :end-column 20, :arglists (quote ([{:keys [error-msg result-channel]}]))}, :name syng-im.protocol.web3/make-callback, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 20, :method-params ([p__24165]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [error-msg result-channel]}]))}, new-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([web3]))}, :name syng-im.protocol.web3/new-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 19, :method-params ([web3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([web3]))}, whisper {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 20, :column 7, :end-line 20, :end-column 14, :arglists (quote ([web3]))}, :name syng-im.protocol.web3/whisper, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 14, :method-params ([web3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([web3]))}, from-ascii {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([s]))}, :name syng-im.protocol.web3/from-ascii, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 17, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, create-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 48, :column 7, :end-line 48, :end-column 22, :arglists (quote ([web3]))}, :name syng-im.protocol.web3/create-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 22, :method-params ([web3]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([web3]))}, syng-msg-ttl {:name syng-im.protocol.web3/syng-msg-ttl, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 12, :column 1, :end-line 12, :end-column 18, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 12, :column 6, :end-line 12, :end-column 18}}, make-topics {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 23, :column 7, :end-line 23, :end-column 18, :arglists (quote ([topics]))}, :name syng-im.protocol.web3/make-topics, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 18, :method-params ([topics]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([topics]))}, add-identity {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 66, :column 7, :end-line 66, :end-column 19, :arglists (quote ([web3 private-key]))}, :name syng-im.protocol.web3/add-identity, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 19, :method-params ([web3 private-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([web3 private-key]))}, encrypt-payload {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 91, :column 7, :end-line 91, :end-column 22, :arglists (quote ([public-key clear-info payload-str]))}, :name syng-im.protocol.web3/encrypt-payload, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 22, :method-params ([public-key clear-info payload-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([public-key clear-info payload-str]))}, make-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 96, :column 7, :end-line 96, :end-column 15, :arglists (quote ([{:keys [from to ttl topics payload encrypt? public-key clear-info], :or {ttl syng-msg-ttl, topics []}}])), :doc "Returns [msg-id msg], `msg` is formed for Web3.shh.post()"}, :name syng-im.protocol.web3/make-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 15, :method-params ([p__24172]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [from to ttl topics payload encrypt? public-key clear-info], :or {ttl syng-msg-ttl, topics []}}])), :doc "Returns [msg-id msg], `msg` is formed for Web3.shh.post()"}, make-web3 {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([rpc-url]))}, :name syng-im.protocol.web3/make-web3, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 16, :method-params ([rpc-url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rpc-url]))}, listen {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 115, :column 7, :end-line 115, :end-column 13, :arglists (quote ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}])), :doc "Returns a filter which can be stopped with (stop-whisper-listener)", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}]), :arglists ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}]), :arglists-meta (nil nil)}}, :name syng-im.protocol.web3/listen, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}]), :arglists ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}]), :arglists-meta (nil nil)}, :method-params ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 3, :fn-var true, :arglists ([web3 msg-handler] [web3 msg-handler {:keys [topics], :as opts, :or {topics []}}]), :doc "Returns a filter which can be stopped with (stop-whisper-listener)"}, stop-listener {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 128, :column 7, :end-line 128, :end-column 20, :arglists (quote ([group-topic]))}, :name syng-im.protocol.web3/stop-listener, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 20, :method-params ([group-topic]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-topic]))}, to-ascii {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([s]))}, :name syng-im.protocol.web3/to-ascii, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, post-msg {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 80, :column 7, :end-line 80, :end-column 15, :arglists (quote ([web3 msg]))}, :name syng-im.protocol.web3/post-msg, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :end-column 15, :method-params ([web3 msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([web3 msg]))}, syng-app-topic {:name syng-im.protocol.web3/syng-app-topic, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 11, :column 1, :end-line 11, :end-column 20, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/protocol/web3.cljs", :line 11, :column 6, :end-line 11, :end-column 20}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:enc-payload :msg-id :jsonrpc :payload :private :method :result-channel :public :params :msg :topics :error-msg :ttl :details :result :from :id :error :clear-info :encrypt? :keywordize-keys :public-key :to}, :order [:topics :error-msg :result-channel :error :details :jsonrpc :method :params :id :result :keywordize-keys :public :private :enc-payload :from :to :ttl :payload :encrypt? :public-key :clear-info :msg-id :msg]}, :doc nil}