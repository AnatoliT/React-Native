;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.utils.crypt, :imports {Sha256 goog.crypt.Sha256}, :requires {goog.crypt goog.crypt, s clojure.string, clojure.string clojure.string, Sha256 goog.crypt.Sha256}, :uses {byteArrayToHex goog.crypt}, :defs {sha-256 {:name syng-im.utils.crypt/sha-256, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :line 8, :column 1, :end-line 8, :end-column 13, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :line 8, :column 6, :end-line 8, :end-column 13}}, bytes-to-str {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :line 10, :column 7, :end-line 10, :end-column 19, :arglists (quote ([arr]))}, :name syng-im.utils.crypt/bytes-to-str, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :end-column 19, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr]))}, str-to-bytes {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :line 13, :column 7, :end-line 13, :end-column 19, :arglists (quote ([s]))}, :name syng-im.utils.crypt/str-to-bytes, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, encrypt {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :line 16, :column 7, :end-line 16, :end-column 14, :arglists (quote ([s]))}, :name syng-im.utils.crypt/encrypt, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :end-column 14, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, gen-random-bytes {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :line 21, :column 7, :end-line 21, :end-column 23, :arglists (quote ([length cb]))}, :name syng-im.utils.crypt/gen-random-bytes, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/utils/crypt.cljs", :end-column 23, :method-params ([length cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([length cb]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:error :buffer}, :order [:error :buffer]}, :doc nil}