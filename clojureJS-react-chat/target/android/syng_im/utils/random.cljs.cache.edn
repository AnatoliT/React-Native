;; Analyzed by ClojureScript 1.7.170
{:name syng-im.utils.random, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {cljsjs.chance cljsjs.chance, t cljs-time.core, cljs-time.core cljs-time.core, tf cljs-time.format, cljs-time.format cljs-time.format}, :imports nil, :defs {timestamp {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/utils/random.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([]))}, :name syng-im.utils.random/timestamp, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/utils/random.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, id {:protocol-inline nil, :meta {:file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/utils/random.cljs", :line 9, :column 7, :end-line 9, :end-column 9, :arglists (quote ([]))}, :name syng-im.utils.random/id, :variadic false, :file "file:/C:/Users/MC/.m2/repository/syng-im/protocol/0.1.1/protocol-0.1.1.jar!/syng_im/utils/random.cljs", :end-column 9, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}