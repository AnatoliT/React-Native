;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{exists?}, :name syng-im.persistence.realm, :imports nil, :requires {cljs.reader cljs.reader, log syng-im.utils.logging, syng-im.utils.logging syng-im.utils.logging, syng-im.utils.types syng-im.utils.types}, :uses {to-string syng-im.utils.types, read-string cljs.reader}, :defs {get-list {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 124, :column 7, :end-line 124, :end-column 15, :arglists (quote ([schema-name]))}, :name syng-im.persistence.realm/get-list, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 15, :method-params ([schema-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([schema-name]))}, get-count {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 121, :column 7, :end-line 121, :end-column 16, :arglists (quote ([objs]))}, :name syng-im.persistence.realm/get-count, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 16, :method-params ([objs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([objs]))}, get-by-field {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 84, :column 7, :end-line 84, :end-column 19, :arglists (quote ([schema-name field value]))}, :name syng-im.persistence.realm/get-by-field, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 19, :method-params ([schema-name field value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 3, :fn-var true, :arglists (quote ([schema-name field value]))}, schema-by-name {:name syng-im.persistence.realm/schema-by-name, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 54, :column 1, :end-line 54, :end-column 20, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 54, :column 6, :end-line 54, :end-column 20}}, single-cljs {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 105, :column 7, :end-line 105, :end-column 18, :arglists (quote ([result]))}, :name syng-im.persistence.realm/single-cljs, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 18, :method-params ([result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([result]))}, single {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 102, :column 7, :end-line 102, :end-column 13, :arglists (quote ([result]))}, :name syng-im.persistence.realm/single, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 13, :method-params ([result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([result]))}, field-type {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 59, :column 7, :end-line 59, :end-column 17, :arglists (quote ([schema-name field]))}, :name syng-im.persistence.realm/field-type, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 17, :method-params ([schema-name field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([schema-name field]))}, to-query {:name syng-im.persistence.realm/to-query, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 74, :column 1, :end-line 74, :end-column 19, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 74, :column 11, :end-line 74, :end-column 19}}, create {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 68, :column 7, :end-line 68, :end-column 13, :arglists (quote ([schema-name obj] [schema-name obj update?])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([schema-name obj] [schema-name obj update?]), :arglists ([schema-name obj] [schema-name obj update?]), :arglists-meta (nil nil)}}, :name syng-im.persistence.realm/create, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([schema-name obj] [schema-name obj update?]), :arglists ([schema-name obj] [schema-name obj update?]), :arglists-meta (nil nil)}, :method-params ([schema-name obj] [schema-name obj update?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 3, :fn-var true, :arglists ([schema-name obj] [schema-name obj update?])}, realm {:name syng-im.persistence.realm/realm, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 52, :column 1, :end-line 52, :end-column 11, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 52, :column 6, :end-line 52, :end-column 11}}, list-to-array {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 109, :column 7, :end-line 109, :end-column 20, :arglists (quote ([record list-field]))}, :name syng-im.persistence.realm/list-to-array, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 20, :method-params ([record list-field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([record list-field]))}, delete {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 115, :column 7, :end-line 115, :end-column 13, :arglists (quote ([obj]))}, :name syng-im.persistence.realm/delete, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 13, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, page {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 99, :column 7, :end-line 99, :end-column 11, :arglists (quote ([results from to]))}, :name syng-im.persistence.realm/page, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 11, :method-params ([results from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 3, :fn-var true, :arglists (quote ([results from to]))}, decode-value {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 112, :column 7, :end-line 112, :end-column 19, :arglists (quote ([{:keys [key value]}]))}, :name syng-im.persistence.realm/decode-value, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 19, :method-params ([p__23564]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [key value]}]))}, filtered {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 96, :column 7, :end-line 96, :end-column 15, :arglists (quote ([results filter-query]))}, :name syng-im.persistence.realm/filtered, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 15, :method-params ([results filter-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([results filter-query]))}, write {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 65, :column 7, :end-line 65, :end-column 12, :arglists (quote ([f]))}, :name syng-im.persistence.realm/write, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 12, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, sorted {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 91, :column 7, :end-line 91, :end-column 13, :arglists (quote ([results field-name order]))}, :name syng-im.persistence.realm/sorted, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 13, :method-params ([results field-name order]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([results field-name order]))}, exists? {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 118, :column 7, :end-line 118, :end-column 14, :arglists (quote ([schema-name field value]))}, :name syng-im.persistence.realm/exists?, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 14, :method-params ([schema-name field value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 3, :fn-var true, :arglists (quote ([schema-name field value]))}, get-all {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 88, :column 7, :end-line 88, :end-column 14, :arglists (quote ([schema-name]))}, :name syng-im.persistence.realm/get-all, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :end-column 14, :method-params ([schema-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([schema-name]))}, opts {:name syng-im.persistence.realm/opts, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 9, :column 1, :end-line 9, :end-column 10, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm.cljs", :line 9, :column 6, :end-line 9, :end-column 10}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:indexed :properties :schema :chat-contact :identity :msg-id :phone-number :key :eq :kv-store :contacts :content :default :name :asc :value :background-color :primaryKey :text-color :type :chats :objectType :is-active :delivery-status :photo-path :msgs :from :optional :group-chat :chat-id :content-type :optinal :whisper-identity :hierarchy :timestamp :keywordize-keys :outgoing :to}, :order [:schema :name :primaryKey :properties :contacts :whisper-identity :phone-number :photo-path :type :optional :optinal :kv-store :key :value :msgs :msg-id :content :delivery-status :from :chat-id :content-type :timestamp :outgoing :to :indexed :chat-contact :identity :text-color :background-color :chats :group-chat :is-active :objectType :hierarchy :default :eq :asc :keywordize-keys]}, :doc nil}