;; Analyzed by ClojureScript 1.7.170
{:name syng-im.persistence.realm-queries, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {to-string syng-im.utils.types}, :requires {s clojure.string, clojure.string clojure.string, syng-im.utils.types syng-im.utils.types}, :imports nil, :defs {include-query {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm_queries.cljs", :line 5, :column 7, :end-line 5, :end-column 20, :arglists (quote ([field-name values]))}, :name syng-im.persistence.realm-queries/include-query, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm_queries.cljs", :end-column 20, :method-params ([field-name values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field-name values]))}, exclude-query {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm_queries.cljs", :line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([field-name values]))}, :name syng-im.persistence.realm-queries/exclude-query, :variadic false, :file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/persistence/realm_queries.cljs", :end-column 20, :method-params ([field-name values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field-name values]))}}}