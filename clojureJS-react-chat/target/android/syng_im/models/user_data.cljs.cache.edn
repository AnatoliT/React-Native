;; Analyzed by ClojureScript 1.7.170
{:use-macros {get-item natal-shell.async-storage, set-item natal-shell.async-storage}, :excludes #{}, :name syng-im.models.user-data, :imports nil, :requires {re-frame.core re-frame.core, syng-im.utils.utils syng-im.utils.utils}, :uses {on-error syng-im.utils.utils, subscribe re-frame.core, log syng-im.utils.utils, dispatch-sync re-frame.core, dispatch re-frame.core, toast syng-im.utils.utils}, :defs {save-phone-number {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/user_data.cljs", :line 7, :column 7, :end-line 7, :end-column 24, :arglists (quote ([phone-number]))}, :name syng-im.models.user-data/save-phone-number, :variadic false, :file "src/syng_im/models/user_data.cljs", :end-column 24, :method-params ([phone-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([phone-number]))}, load-phone-number {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/user_data.cljs", :line 11, :column 7, :end-line 11, :end-column 24, :arglists (quote ([]))}, :name syng-im.models.user-data/load-phone-number, :variadic false, :file "src/syng_im/models/user_data.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {natal-shell.async-storage natal-shell.async-storage}, :cljs.analyzer/constants {:seen #{:set-user-phone-number}, :order [:set-user-phone-number]}, :doc nil}