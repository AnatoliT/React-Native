;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.models.protocol, :imports nil, :requires {syng-im.utils.types syng-im.utils.types, log syng-im.utils.logging, syng-im.utils.logging syng-im.utils.logging, syng-im.persistence.simple-kv-store syng-im.persistence.simple-kv-store, db syng-im.db, kv syng-im.persistence.simple-kv-store, syng-im.db syng-im.db, syng-im.protocol.state.storage syng-im.protocol.state.storage, s syng-im.protocol.state.storage, syng-im.utils.encryption syng-im.utils.encryption, cljs.reader cljs.reader, re-frame.db re-frame.db}, :uses {app-db re-frame.db, password-encrypt syng-im.utils.encryption, password-decrypt syng-im.utils.encryption, read-string cljs.reader, to-edn-string syng-im.utils.types}, :defs {set-initialized {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\protocol.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([db initialized?]))}, :name syng-im.models.protocol/set-initialized, :variadic false, :file "src\\syng_im\\models\\protocol.cljs", :end-column 22, :method-params ([db initialized?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db initialized?]))}, update-identity {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\protocol.cljs", :line 15, :column 7, :end-line 15, :end-column 22, :arglists (quote ([db identity]))}, :name syng-im.models.protocol/update-identity, :variadic false, :file "src\\syng_im\\models\\protocol.cljs", :end-column 22, :method-params ([db identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db identity]))}, stored-identity {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\protocol.cljs", :line 21, :column 7, :end-line 21, :end-column 22, :arglists (quote ([db]))}, :name syng-im.models.protocol/stored-identity, :variadic false, :file "src\\syng_im\\models\\protocol.cljs", :end-column 22, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:identity :user-identity}, :order [:identity :user-identity]}, :doc nil}