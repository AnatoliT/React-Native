;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.models.contacts, :imports nil, :requires {async cljs.core.async, r syng-im.persistence.realm, syng-im.utils.utils syng-im.utils.utils, cljs.core.async cljs.core.async, realm syng-im.persistence.realm, s clojure.string, syng-im.persistence.realm syng-im.persistence.realm, syng-im.persistence.realm-queries syng-im.persistence.realm-queries, clojure.string clojure.string, re-frame.core re-frame.core}, :uses {include-query syng-im.persistence.realm-queries, subscribe re-frame.core, log syng-im.utils.utils, <! cljs.core.async, chan cljs.core.async, dispatch-sync re-frame.core, >! cljs.core.async, dispatch re-frame.core, toast syng-im.utils.utils, exclude-query syng-im.persistence.realm-queries, put! cljs.core.async}, :defs {save-syng-contacts {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 87, :column 7, :end-line 87, :end-column 25, :arglists (quote ([syng-contacts]))}, :name syng-im.models.contacts/save-syng-contacts, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 25, :method-params ([syng-contacts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([syng-contacts]))}, contacts-list-exclude {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 96, :column 7, :end-line 96, :end-column 28, :arglists (quote ([exclude-idents]))}, :name syng-im.models.contacts/contacts-list-exclude, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 28, :method-params ([exclude-idents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exclude-idents]))}, contact-exist? {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 74, :column 8, :end-line 74, :end-column 22, :private true, :arglists (quote ([contacts contact]))}, :private true, :name syng-im.models.contacts/contact-exist?, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 22, :method-params ([contacts contact]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([contacts contact]))}, react-native-contacts {:name syng-im.models.contacts/react-native-contacts, :file "src/syng_im/models/contacts.cljs", :line 15, :column 1, :end-line 15, :end-column 27, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 15, :column 6, :end-line 15, :end-column 27}}, generate-contacts {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 26, :column 8, :end-line 26, :end-column 25, :private true, :arglists (quote ([n]))}, :private true, :name syng-im.models.contacts/generate-contacts, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 25, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, fake-contacts? {:name syng-im.models.contacts/fake-contacts?, :file "src/syng_im/models/contacts.cljs", :line 13, :column 1, :end-line 13, :end-column 20, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 13, :column 6, :end-line 13, :end-column 20}}, get-contacts {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 49, :column 8, :end-line 49, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name syng-im.models.contacts/get-contacts, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-contacts {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 77, :column 8, :end-line 77, :end-column 20, :private true, :arglists (quote ([contacts]))}, :private true, :name syng-im.models.contacts/add-contacts, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 20, :method-params ([contacts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([contacts]))}, generate-contact {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 17, :column 8, :end-line 17, :end-column 24, :private true, :arglists (quote ([n]))}, :private true, :name syng-im.models.contacts/generate-contact, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 24, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, create-contact {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 67, :column 8, :end-line 67, :end-column 22, :private true, :arglists (quote ([{:keys [phone-number whisper-identity name photo-path]}]))}, :private true, :name syng-im.models.contacts/create-contact, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 22, :method-params ([p__23573]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [phone-number whisper-identity name photo-path]}]))}, contacts-list-include {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 102, :column 7, :end-line 102, :end-column 28, :arglists (quote ([include-indents]))}, :name syng-im.models.contacts/contacts-list-include, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 28, :method-params ([include-indents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([include-indents]))}, load-phone-contacts {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 29, :column 7, :end-line 29, :end-column 26, :arglists (quote ([]))}, :name syng-im.models.contacts/load-phone-contacts, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, contacts-list {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 93, :column 7, :end-line 93, :end-column 20, :arglists (quote ([]))}, :name syng-im.models.contacts/contacts-list, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, fake-phone-contacts? {:name syng-im.models.contacts/fake-phone-contacts?, :file "src/syng_im/models/contacts.cljs", :line 12, :column 1, :end-line 12, :end-column 26, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 12, :column 6, :end-line 12, :end-column 26}}, load-syng-contacts {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 57, :column 7, :end-line 57, :end-column 25, :arglists (quote ([db]))}, :name syng-im.models.contacts/load-syng-contacts, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 25, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, contact-by-identity {:protocol-inline nil, :meta {:file "/Work/Dev_Work/Upwork/status-im/status-react/src/syng_im/models/contacts.cljs", :line 108, :column 7, :end-line 108, :end-column 26, :arglists (quote ([identity]))}, :name syng-im.models.contacts/contact-by-identity, :variadic false, :file "src/syng_im/models/contacts.cljs", :end-column 26, :method-params ([identity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([identity]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:phone-number :number :contacts :name :asc :phoneNumbers :delivered :delivery-status :online :photo-path :seen :label :givenName :phone-numbers :datetime :error :thumbnailPath :whisper-identity :new-messages-count :keywordize-keys}, :order [:name :photo-path :phone-numbers :delivery-status :datetime :new-messages-count :online :label :number :delivered :seen :error :contacts :givenName :thumbnailPath :phoneNumbers :keywordize-keys :phone-number :whisper-identity :asc]}, :doc nil}