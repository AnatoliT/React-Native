;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name syng-im.models.chats, :imports nil, :requires {syng-im.constants syng-im.constants, log syng-im.utils.logging, syng-im.utils.logging syng-im.utils.logging, r syng-im.persistence.realm, syng-im.utils.random syng-im.utils.random, db syng-im.db, syng-im.db syng-im.db, syng-im.persistence.realm syng-im.persistence.realm, syng-im.persistence.realm-queries syng-im.persistence.realm-queries, clojure.string clojure.string}, :uses {timestamp syng-im.utils.random, include-query syng-im.persistence.realm-queries, join clojure.string, group-chat-colors syng-im.constants, blank? clojure.string}, :defs {chat-add-participants {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 65, :column 7, :end-line 65, :end-column 28, :arglists (quote ([chat-id identities]))}, :name syng-im.models.chats/chat-add-participants, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 28, :method-params ([chat-id identities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chat-id identities]))}, chat-remove-participants {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 83, :column 7, :end-line 83, :end-column 31, :arglists (quote ([chat-id identities]))}, :name syng-im.models.chats/chat-remove-participants, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 31, :method-params ([chat-id identities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chat-id identities]))}, chat-name-from-contacts {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([identities]))}, :name syng-im.models.chats/chat-name-from-contacts, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 30, :method-params ([identities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([identities]))}, active-group-chats {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 92, :column 7, :end-line 92, :end-column 25, :arglists (quote ([]))}, :name syng-im.models.chats/active-group-chats, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chats-list {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 57, :column 7, :end-line 57, :end-column 17, :arglists (quote ([]))}, :name syng-im.models.chats/chats-list, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, create-chat {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 34, :column 7, :end-line 34, :end-column 18, :arglists (quote ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name]), :arglists ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name]), :arglists-meta (nil nil)}}, :name syng-im.models.chats/create-chat, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name]), :arglists ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name]), :arglists-meta (nil nil)}, :method-params ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 5, :fn-var true, :arglists ([db chat-id identities group-chat?] [db chat-id identities group-chat? chat-name])}, chat-by-id {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 60, :column 7, :end-line 60, :end-column 17, :arglists (quote ([chat-id]))}, :name syng-im.models.chats/chat-by-id, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 17, :method-params ([chat-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chat-id]))}, chats-updated? {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 16, :column 7, :end-line 16, :end-column 21, :arglists (quote ([db]))}, :name syng-im.models.chats/chats-updated?, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 21, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, signal-chats-updated {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 10, :column 7, :end-line 10, :end-column 27, :arglists (quote ([db]))}, :name syng-im.models.chats/signal-chats-updated, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 27, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}, get-chat-name {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 30, :column 7, :end-line 30, :end-column 20, :arglists (quote ([chat-id identities]))}, :name syng-im.models.chats/get-chat-name, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 20, :method-params ([chat-id identities]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chat-id identities]))}, set-chat-active {:protocol-inline nil, :meta {:file "D:\\React\\chatapp\\status-react\\src\\syng_im\\models\\chats.cljs", :line 99, :column 7, :end-line 99, :end-column 22, :arglists (quote ([chat-id active?]))}, :name syng-im.models.chats/set-chat-active, :variadic false, :file "src\\syng_im\\models\\chats.cljs", :end-column 22, :method-params ([chat-id active?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chat-id active?]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:identity :desc :contacts :name :background-color :text-color :background :chats :is-active :group-chat :chat-id :whisper-identity :timestamp :text}, :order [:name :contacts :whisper-identity :chats :chat-id :background :text :identity :background-color :text-color :is-active :group-chat :timestamp :desc]}, :doc nil}